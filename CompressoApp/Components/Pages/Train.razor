@page "/train"
@* @page "/train/new" *@

@rendermode InteractiveServer

<div class="col-md-8 d-flex align-items-center justify-content-between">
    <!-- Back button -->
    @* <div style="width:330px;">
        <button @onclick="GoBackToCompression"
                class="action-btn primary w-100"
                disabled="@(IsPreparingForTraining
                            || IsTraining 
                            || IsTerminating)">
            Back to Compression
        </button>
    </div> *@

    <!-- New button or placeholder -->
    @if (HasCompleted || HasTerminated)
    {
        <div style="width:330px;">
            <button @onclick= "async () => {await NewTrainingAsync();}"
                    class="action-btn primary w-100">
                New Training
            </button>
        </div>
    }
    else
    {
        <!-- invisible placeholder keeps layout identical -->
        <div style="width:330px; visibility:hidden;">
            <button class="action-btn primary w-100"></button>
        </div>
    }
</div>


<h2 class="mb-4">Train Your Model</h2>


<div class="row mt-3">

    @if (IsTraining)
    {
        <div class="d-flex align-items-center gap-2">
            <button class="btn btn-secondary" disabled style="width:400px">
                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                &nbsp;Running...
            </button>
            <button @onclick="CancelTraining" 
                class="btn btn-danger"
                disabled="@(IsTerminating)"
                style="width: 240px;">
                @(IsTerminating ? "Terminating..." : "Terminate")
            </button>
        </div>

    }
    else
    {
        <div class="d-flex align-items-center gap-2">
            <button class="action-btn primary" 
                    style="flex: 0 0 650px"
                    @onclick="()=>StartTrain()"
                    disabled="@(string.IsNullOrEmpty(SelectedTrainingType) 
                                || string.IsNullOrEmpty(FinalDataId)
                                || IsPreparingForTraining
                                || IsTraining
                                || IsTerminating
                                || HasTerminated
                                || HasCompleted)">
                Start Training
            </button>
        </div>
    }


    @* @if (HasCompleted || HasTerminated)
    {
        <div class="col-md-4 d-flex align-items-center">
            <h5>Results (accuracy):</h5>             
        </div>
    }
    else if (IsPreparingForTraining || IsTraining ||IsTerminating)
    {
        <button @onclick="CancelTraining" 
        class="btn btn-danger"
        disabled="@(IsTerminating)"
        style="width: 150px;">
        @(IsTerminating ? "Terminating..." : "Terminate")
        </button>
    } *@

</div>





<div class="row gx-4 align-items-start">
<!-- Column 1: Dataset Selection -->
<div class="col-md-4 border-end pe-4" style="align-self: flex-start;">
    
    <div class="alert alert-success mt-2">
    <h6 style="color: var(--secondary-color);">Selected Dataset:</h6>
    @if (!string.IsNullOrEmpty(FinalDataId) && FinalSummary != null)
    {
        <h6>
            <span style="color: var(--secondary-color);"> @FinalSummary.DatasetName,</span> 
            <span style="color: var(--secondary-color);"> K = @FinalSummary.K, </span>
            <span style="color: var(--secondary-color);"> Norm = @FinalSummary.Norm</span>
        </h6>

    }
    else
    {<h6><span style="color: var(--secondary-color);">------------------</span></h6>}
    </div>


    <div style="height: 60px;"></div>  

    @if (summaries != null && summaries.Any())
    {
        <p>Select a dataset:</p>
        <table class="table table-striped">
            <tbody>
                @{ int index = 0; }
                @foreach (var s in summaries)
                {
                    <tr>
                        <td>
                            <strong>@s.DatasetName</strong>, k=@s.K, norm=@s.Norm <br/>
                        </td>
                        <td>
                            <button class="btn btn-outline-primary btn-sm"
                                    disabled="@(IsPreparingForTraining || IsTraining || HasCompleted)"
                                    @onclick="() => SelectData(s.CompressionJobId)"
                                    >
                                @if (FinalDataId == s.CompressionJobId)
                                {
                                    <span>✅</span>
                                }
                                else
                                {
                                    <span>☐</span>
                                }
                            </button>
                        </td>
                    </tr>
                    index++;
                }
            </tbody>
        </table>
    }



    <div>
    @if (summaries == null || !summaries.Any())
    {   
        <p class="text-muted">No datasets available </p>
    }
    </div>

</div>

<!-- Column 2: Training Parameters -->
<div class="col-md-4 border-end px-4">
    <h5>Select a train type: </h5>
    <div class="mb-3">
        <select class="form-select" 
                @bind="SelectedTrainingType"
                
                disabled="@(IsPreparingForTraining
                        || IsTraining
                        || HasCompleted)">
            <option value="">-- Choose Type --</option>
            <option value="Standard">Standard Training</option>
            <option value="Adversarial">Adversarial Training</option>
        </select>
    </div>  

    @if (SelectedTrainingType == "Standard")
    {
        <div class="mt-3">
            <div class="mb-3">
                <label class="form-label">Optimizer</label>
                <select class="form-select" 
                @bind="StandardOptimizer"
                disabled="@(IsPreparingForTraining
                    ||IsTraining
                    ||HasCompleted)">
                    <option>SGD</option>
                    <option>Adam</option>
                </select>
            </div>
            <div class="mb-3">
                <label class="form-label">
                    Iterations</label>
                <input type="number" class="form-control" 
                @bind="StandardItr"
                disabled="@(IsPreparingForTraining
                    ||IsTraining
                    ||HasCompleted)" />
            </div>
            <div class="mb-3">
                <label class="form-label">Learning Rate</label>
                <input type="number" step="0.001" 
                class="form-control" 
                @bind="StandardLr"
                disabled="@(IsPreparingForTraining
                            ||IsTraining
                            ||HasCompleted)" />
            </div>
            <div class="mb-3">
                <label class="form-label">Adv test at the final epoch</label>
                <InputSelect class="form-select"
                            @bind-Value="RequireFinalAdvAttackTest"
                            disabled="@(IsPreparingForTraining
                                        || IsTraining
                                        || HasCompleted)">
                    <option value="true">Yes</option>
                    <option value="false">No</option>
                </InputSelect>
            </div>
        </div>
    }

    @if (SelectedTrainingType == "Adversarial")
    {
        <div class="mt-3">

            <div class="mb-3">
                <label class="form-label">Attack</label>
                <select class="form-select" 
                @bind="AdvAttack"
                disabled="@(IsPreparingForTraining
                            ||IsTraining
                            ||HasCompleted)"
                            >
                    <option>PGD-linf</option>
                    <option>PGD-l2</option>
                </select>
            </div>


            <div class="mb-3">
                <label class="form-label">Epsilon (radius)</label>
                <input type="number" step="0.01" 
                class="form-control" 
                @bind="AdvEps" 
                disabled="@(IsPreparingForTraining
                            ||IsTraining
                            ||HasCompleted)"/>
            </div>


            <div class="mb-3">
                <label class="form-label">Optimizer</label>
                <select class="form-select" 
                @bind="AdvOptimizer"
                disabled="@(IsPreparingForTraining
                            ||IsTraining
                            ||HasCompleted)">
                    <option>SGD</option>
                    <option>Adam</option>
                </select>
            </div>
            <div class="mb-3">
                <label class="form-label">Iterations</label>
                <input type="number" class="form-control" 
                disabled="@(IsPreparingForTraining
                            ||IsTraining
                            ||HasCompleted)"
                @bind="AdvItr" />
            </div>
            <div class="mb-3">
                <label class="form-label">Learning Rate</label>
                <input type="number" step="0.0001" 
                class="form-control" @bind="AdvLr"
                disabled="@(IsPreparingForTraining
                            ||IsTraining
                            ||HasCompleted)"
                            />
            </div>
            <div class="mb-3">
                <label class="form-label">Alpha</label>
                <input type="number" step="0.0001" 
                class="form-control" @bind="AdvAlpha"
                disabled="@(IsPreparingForTraining
                            ||IsTraining
                            ||HasCompleted)" />
            </div>


            <div class="mb-3">
                <label class="form-label">Adv test at the final epoch</label>
                <InputSelect class="form-select"
                            @bind-Value="RequireFinalAdvAttackTest"
                            disabled="@(IsPreparingForTraining
                                        || IsTraining
                                        || HasCompleted)">
                    <option value="true">Yes</option>
                    <option value="false">No</option>
                </InputSelect>
            </div>

        </div>
    }
</div>


<!-- Column 3: Results -->
<div class="col-md-4 ps-4">
   @{
    bool showAlert = IsPreparingForTraining
                     || IsTraining
                     || HasCompleted
                     || IsTerminating
                     || HasTerminated
                     || RequireFinalAdvAttackTest;
    }

    @if (showAlert)
    {
        <div class="alert alert-success mt-2">
            @if (IsPreparingForTraining)
            {
                <span>Preparing...</span><br/>
            }
            else if (IsTraining)
            {
                <span>Training...</span><br/>
            }        
            else if (HasCompleted)
            {
                <span>Training finished!</span><br/> 
            }
            else if (IsTerminating)
            {
                <span>Waiting for terminating...</span><br/> 
            }
            else if (HasTerminated)
            {
                <span>Training terminated</span><br/> 
            }

            @if (IsTraining || HasCompleted 
                || IsTerminating || HasTerminated)
            {
                <span>Elapsed time: ~ @ElapsedSeconds s</span> <br/> 
            }

           
            @if (HasCompleted || HasTerminated)
            {
                <span>Final Epoch (@EpochMetricsList.Last().Epoch]):</span> <br/>
                <span>Test_acc = @FormatValue(EpochMetricsList.Last().TestAcc)</span> 
            }
            @if ((HasCompleted || HasTerminated) && RequireFinalAdvAttackTest)
            {
               
                <span>, Adv_linf_test = @FormatValue(EpochMetricsList.Last().AdvAcc)</span><br/>
            }
            else{
                <span>&nbsp;</span><br />
                <span>&nbsp;</span><br />
            }
                   
        </div>
    }


    @if (EpochMetricsList.Any())
    {

        @if (!string.IsNullOrEmpty(SaveMessage))
        {
            <div style="display: flex;  align-items: center;">
                <p class="text-danger mb-0">@SaveMessage</p>
            </div>
        }
        else{
            <div style="display: flex;  align-items: center;">
                <span>&nbsp;</span><br />
            </div>  
        }
        <table class="table text-center ">
            <thead>
                <tr>
                    <th>
                        <button 
                            @onclick="SaveModel" 
                            disabled="@(HasSavedModel ||IsPreparingForTraining || IsTraining || IsTerminating)"                               
                            class="action-btn primary"
                            style="width: 90px; height: 45px;">
                            Save
                        </button> 
                    </th>
                    <th style="vertical-align: middle;">Epoch</th>
                    <th style="vertical-align: middle;">Train</th>
                    <th style="vertical-align: middle;">Test</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var i in Enumerable.Range(0, EpochMetricsList.Count).Reverse().ToList() )

                {
                    var metrics = EpochMetricsList[i];
                    bool isLast = (i == EpochMetricsList.Count - 1) 
                            && (HasCompleted|| HasTerminated);
                    
                    
                    <tr class="@((isLast) ? "table-success" : "")">
                        <td>
                            <button class="btn btn-outline-primary btn-sm"
                                    disabled="@(IsPreparingForTraining || IsTraining || IsTerminating || HasSavedModel)"
                                    @onclick="() => SelectEpoch(i)"
                                    >                                
                                    @if (selectedEpoch == i)
                                        {
                                            <span>✅</span>
                                        }
                                        else
                                        {
                                            <span>☐</span>
                                        }
                            </button>
                        </td>
                        <td>@metrics.Epoch</td>
                        <td>@FormatValue(metrics.TrainAcc)</td>
                        <td>@FormatValue(metrics.TestAcc)</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    </div>
</div>


